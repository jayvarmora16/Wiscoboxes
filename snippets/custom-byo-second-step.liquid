{% comment %}
  <style>
    .loader {
    border: 2px solid #f3f3f3; /* Light grey */
    border-top: 2px solid #3498db; /* Blue */
    border-radius: 50%;
    width: 12px;
    height: 12px;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  .disabled-btn.loading::after {
    content: '';
    display: inline-block;
    margin-left: 5px;
    vertical-align: middle;

    /* Insert the styles for your loader here (e.g., the .loader styles) */
    border: 2px solid #f3f3f3; /* Light grey */
    border-top: 2px solid #3498db; /* Blue */
    border-radius: 50%;
    width: 12px;
    height: 12px;
    animation: spin 1s linear infinite;
  }
  </style>
{% endcomment %}
<section id="gsBuilderItems" class="gs__selected-items">
  <div class="gs__item-main-content"><h2 class="gs__item-main-content-heading">Box Contents</h2></div>
  <div class="gs__item-sidebar">
    <div class="gs__box-summary">
      <div class="loader"></div>
      <h2 class="gs__box-summary-header">Box Summary</h2>
      <div class="gs__box-sizes">
        <div class="gs__box-size-row gs__current-box-size">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 151 133" class="gs__box-preview-svg" fill="currentColor">
            <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="Package_Opened" transform="translate(1.000000, 1.000000)"><path d="M18.4,36.1 L1.6,19.7 C0.1,18.2 0.8,15.6 2.9,15.1 L58.9,1 C60.4,0.6 61.9,1.2 62.9,2.3 L77.2,20.1 L18.4,36.1" id="Shape" fill="#FFFFFF" fill-rule="nonzero"></path><path d="M18.4,36.1 L4.1,22.9 C2.6,21.4 3.3,18.8 5.4,18.3 L57.4,5 C58.9,4.6 60.4,5.2 61.4,6.3 L73.2,20.9 L18.4,36.1" id="Shape" fill="#DDECFE" fill-rule="nonzero"></path><path d="M18.4,36.1 L77.6,47.3 L77.9,130.2 L18.5,114.4 C18.5,114.4 18.9,36.1 18.4,36.1 Z" id="Shape" fill="#FFFFFF" fill-rule="nonzero"></path><path d="M134.4,32.9 L77.6,47.4 L77.9,130.3 L134.6,110.5 C134.6,110.5 133.9,32.9 134.4,32.9 Z" id="Shape" fill="#FFFFFF" fill-rule="nonzero"></path><path d="M21.7,39.9 L79.2,50.7 L79.5,130.3 L21.9,115.1 C21.9,115.1 22.2,39.9 21.7,39.9 Z" id="Shape" fill="#DDECFE" fill-rule="nonzero"></path><path d="M134.6,111.3 L79.5,130.3 L79.2,54.7 L79.2,50.8 L134.4,36.9 C134.2,36.9 134.2,51.3 134.3,67.4 C134.4,87.9 134.6,111.3 134.6,111.3 Z" id="Shape" fill="#DDECFE" fill-rule="nonzero"></path><path d="M134.3,61.7 L87.7,74.8 C85.7,75 83.9,73.8 83.3,71.8 L79.3,54.7 L79.3,50.8 L134.5,36.9 C134.2,36.8 134.2,45.6 134.3,61.7 Z" id="Shape" fill="#B8D9FF" fill-rule="nonzero"></path><path d="M77.8,92.6 L77.9,130.3 L18.5,114.5 C18.5,114.5 18.8,36.2 18.3,36.2 L77.5,47.4" id="Shape" stroke="#1676EE" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"></path><path d="M77.7,72.1 L77.7,84.3" id="Shape" stroke="#1676EE" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"></path><path d="M134.2,55.4 C134.2,42.7 134.2,32.9 134.4,32.9 L77.7,47.3" id="Shape" stroke="#1676EE" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"></path><path d="M77.8,101.2 L77.9,130.3 L134.6,110.5 C134.6,110.5 134.4,84.9 134.3,63.1" id="Shape" stroke="#1676EE" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"></path><polygon id="Shape" fill="#FFFFFF" fill-rule="nonzero" points="18.4 36.1 77.2 20.1 134.4 32.9 77.6 47.3"></polygon><polygon id="Shape" fill="#99C7FF" fill-rule="nonzero" points="27.7 37 77 23.1 129.6 34.9 82.1 47.3"></polygon><polyline id="Shape" stroke="#1676EE" stroke-width="3" stroke-linecap="round" stroke-linejoin="round" points="96.4 24.4 134.4 32.9 77.6 47.3 18.4 36.1 77.2 20.1 84.5 21.8"></polyline><path d="M87.7,22.5 L89,22.8" id="Shape" stroke="#1676EE" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"></path><path d="M18.4,36.1 L1.6,19.7 C0.1,18.2 0.8,15.6 2.9,15.1 L58.9,1 C60.4,0.6 61.9,1.2 62.9,2.3 L77.2,20.1 L18.4,36.1" id="Shape" stroke="#1676EE" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"></path><path d="M134.4,32.9 L147.7,49 C149,50.7 148.2,53.1 146.2,53.7 L98.8,67.6 C97.3,68 95.8,67.5 94.8,66.4 L77.6,47.4 L134.4,32.9 Z" id="Shape" fill="#FFFFFF" fill-rule="nonzero"></path><path d="M133.6,36.1 L144.4,49.8 C145.7,51.5 144.9,53.9 142.9,54.5 L98.7,67.6 C97.2,68 95.7,67.5 94.7,66.4 L79.9,49.8 L133.6,36.1 Z" id="Shape" fill="#DDECFE" fill-rule="nonzero"></path><path d="M134.4,32.9 L147.7,49 C149,50.7 148.2,53.1 146.2,53.7 L98.8,67.6 C97.3,68 95.8,67.5 94.8,66.4 L77.6,47.4 L134.4,32.9 Z" id="Shape" stroke="#1676EE" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"></path><path d="M77,34.2 L77,47.2" id="Shape" stroke="#1676EE" stroke-width="3" fill="#DDECFE" fill-rule="nonzero" stroke-linecap="round" stroke-linejoin="round"></path><path d="M77,25.4 L77,29.4" id="Shape" stroke="#1676EE" stroke-width="3" fill="#DDECFE" fill-rule="nonzero" stroke-linecap="round" stroke-linejoin="round"></path><polygon id="Shape" fill="#FFFFFF" fill-rule="nonzero" points="50.8 77.7 29.2 72.8 29.2 57.9 50.8 62.8"></polygon><polygon id="Shape" fill="#99C7FF" fill-rule="nonzero" points="50.8 77.7 31.4 73.6 31.4 61 50.3 65.4"></polygon><polygon id="Shape" stroke="#1676EE" stroke-width="3" stroke-linecap="round" stroke-linejoin="round" points="50.8 77.7 29.2 72.8 29.2 57.9 50.8 62.8"></polygon></g></g>
          </svg>
          <p class="gs__box-name"></p>
          <p class="gs__box-price"></p>
        </div>
      </div>
      <div class="gs__box-summary-footer">
        <p class="gs__box-total">Total: <span class="total-price"></span></p>
      </div>
    </div>
    <div class="gs__nav-buttons">
      <div class="dot-container">
        <div class="dot light"></div>
        <div class="dot dark"></div>
      </div>
      <div class="gs__nav-buttons-container-double">
        <button class="previous-button" type="button">Previous</button>
        <button class="add-to-cart-button disabled-btn" type="button" disabled>Add to Cart</button>
      </div>
    </div>
  </div>
</section>
<script>
  var addToCartButton = document.querySelector('.add-to-cart-button');

  async function handleAddToCartClick(event) {
    // this.classList.add('loading');
    let _gs_bundle_contents = [];
    let _gs_bundle_ids = [];
    let _gs_bundle_prices = [];
    let _gs_bundle_quantities = [];
    let _gs_bundle_discount = 0;

    for (let i = 0; i < localStorage.length; i++) {
      const key = localStorage.key(i);

      if (key.startsWith('product-')) {
        const productObj = JSON.parse(localStorage.getItem(key));

        _gs_bundle_ids.push(productObj.id);
        _gs_bundle_prices.push(productObj.price);
        _gs_bundle_quantities.push(productObj.quantity);
        _gs_bundle_contents.push(`${productObj.title} - ${productObj.quantity}`);
      }
    }

    let giftNotes = localStorage.getItem('giftNotes');
    let shippingDate = localStorage.getItem('shippingDate');
    let properties = {
      "_gs_bundle_discount1": _gs_bundle_discount,
      "_gs_bundle_contents1": _gs_bundle_contents,
      "_gs_bundle_ids1": _gs_bundle_ids,
      "_gs_bundle_prices1": _gs_bundle_prices,
      "_gs_bundle_quantities1": _gs_bundle_quantities,
      "gift_notes1": giftNotes,
      "shipping_date1": shippingDate,
    };

    try {
      const urlParams = new URLSearchParams(window.location.search);
      let productId = urlParams.get('product_id');
      const match = productId.match(/^\d+/);
      if (match) {
        productId = match[0];
      }

      let currentParentProduct = parentProducts.find((product) => product.id.toString() === productId);
      console.log(properties, 'properties', parentProducts, currentParentProduct);

      await addToCart(currentParentProduct.variants[0].id, 1, properties);

      let childProperties = {
        Added_to: currentParentProduct.title,
      };
      const addChildProductPromises = [];
      for (let i = 0; i < localStorage.length; i++) {
        const key = localStorage.key(i);

        if (key.startsWith('product-')) {
          const productObj = JSON.parse(localStorage.getItem(key));
          let promise=await addToCart(productObj.id, productObj.quantity, childProperties);
          addChildProductPromises.push(promise);
        }
      }
      await Promise.all(addChildProductPromises);
      window.location.href = '/cart';
    } catch (error) {
      console.error('An error occurred:', error);
    }
  }

  async function addToCart(productId, quantity, payload) {
    let properties = {
      id: productId.toString(),
      quantity: quantity,
      properties: payload,
    };

    try {
      const response = await fetch('/cart/add.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-Requested-With': 'xmlhttprequest',
        },
        body: JSON.stringify(properties),
      });

      const data = await response.json();

      if (response.ok) {
        console.log('Product added to cart:', data);
        
      } else {
        throw new Error(`Error: ${data.message ? data.message : 'Failed to add product to cart'}`);
      }
    } catch (error) {
      console.error(error);
    }
  }

  addToCartButton.addEventListener('click', handleAddToCartClick);
</script>
<style>
  .previous-button {
    min-height: 50px;
    color: #fff;
    border: 1px solid #ededed;
    flex: 1;
    font-size: 1em;
    margin-top: 0;
    padding: 0.55em 0;
    margin-top: 10px;
    margin-bottom: 10px;
    background: white;
    color: black;
  }
  .previous-button:hover {
    background-color: #ededed;
  }

  .add-to-cart-button:hover {
    background-color: #ededed;
  }
  .gs__nav-buttons {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  .gs__nav-buttons-container-double {
    width: 95%;
    display: flex;
    justify-content: center;
  }
  .dot-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 50%;
    margin-top: 12px;
  }

  .dot {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    margin: 0 10px;
  }

  .dark {
    background-color: #000000; /* Dark color */
  }

  .light {
    background-color: #cccccc; /* Light color */
  }
  .add-to-cart-button {
    background: #9b2743;
    min-height: 50px;
    color: #fff;
    border: 1px solid var(--gs-brand-color, #000);
    flex: 1;
    font-size: 1em;
    margin-top: 0;
    padding: 0.55em 0;
    margin-top: 10px;
    margin-bottom: 10px;
  }
  #gsBuilderItems {
    background: #fff;
    display: flex;
    justify-content: center;
    width: 100%;
  }
  .gs__item-main-content {
    display: block;
    overflow: auto;
    width: 65%;
  }
  .gs__item-main-content-heading {
    background: #fcfcfc;
    border-bottom: 1px solid var(--gs-border-color, #ededed);
    font-size: 1em;
    font-weight: 400;
    padding: 0.8em;
    position: sticky;
    text-align: center;
    box-sizing: border-box;
    line-height: normal;
  }
  .gs__item-sidebar {
    border-left: 1px solid #f0f0f0;
    display: grid;
    grid-template-rows: 1fr auto;
    vertical-align: bottom;
    width: 35%;
  }
  .gs__box-summary {
    border-bottom: 1px solid #f0f0f0;
    display: flex;
    flex-direction: column;
  }
  .gs__box-summary-header {
    background: #fcfcfc;
    border-bottom: 1px solid var(--gs-border-color, #ededed);
    font-size: 0.9em;
    font-weight: 400;
    padding: 0.8em;
    position: sticky;
    text-align: center;
  }
  .gs__box-sizes {
    align-items: center;
    height: 100%;
    padding: 0em 1.5em;
  }
  .gs__box-size-row {
    display: grid;
    font-size: 1em;
    font-weight: 400;
    gap: 2em;
    grid-auto-rows: 1fr;
    grid-template-columns: 2em 1fr auto;
    grid-template-rows: 1fr;
    color: rgba(0, 0, 0, 0.5);
  }
  .gs__box-sizes .gs__box-size-row .gs__box-preview-svg {
    aspect-ratio: 1;
    width: 100%;
  }
  .gs__box-summary .gs__box-summary-footer {
    background: #fcfcfc;
    border-top: 1px solid #f0f0f0;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5em;
    justify-content: space-between;
    padding: 0.3em 1.5em;
  }
  .gs__box-summary-footer p {
    font-weight: 600;
    font-size: 1em;
    text-align: center;
    margin: 0;
  }
  .gs__box-summary .gs__box-sizes .gs__box-size-row .gs__box-name {
    align-self: center;
    text-align: start;
  }
  .gs__box-summary .gs__box-sizes .gs__box-size-row p {
    align-self: center;
  }
</style>
